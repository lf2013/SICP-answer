(define (cont-frac n d k re)
;	(display (/ 1.0 (deal)))
;	(display (/ 1.0 (deal 2.0)))
;	(newline)
	(if (= 0 k)
		re	
	(cont-frac n d (- k 1) (/ (n k)(+ re (d k))))))

(define (s f x)
	(let ((xv (f x)))
		(if (< (abs (- x xv)) 0.00001) 
			x
		(s f xv)
		)
	)
)	
(define (findk k)
	(let ((p (/ 1.0 (/ (+ 1.0 (sqrt 5.0)) 2.0))))
	(if (< (abs (- (ff k) p)) 0.00001)
		k
	(findk (+ 1 k)))))
(define (ff k)
	(cont-frac (lambda (i) 1.0) (lambda (i) 1.0) k 0.0))	
(define (deal)
	(s (lambda (x) (+ 1 (/ 1.0 x))) 2.0)
)
(define (p)
	(/ (+ 1.0 (sqrt 5.0)) 2.0))
