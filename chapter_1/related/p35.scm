(define (smallest-divisor n)
	(find-divisor 2 n))  
(define (find-divisor i n)
	(cond ((> (* i i) n) n)
		  ((= (remainder n i) 0) i)
		  (else (find-divisor (+ 1 i) n))))
(define (prime? n)
	(= n (smallest-divisor n)))
(define (timed-prime-test n)
	(newline)
	(display n)
	(start-prime-test n (runtime)))
(define (start-prime-test n start-time)
	(if (prime? n)
		(report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
	(display " **** ")
	(display elapsed-time))

(define (search-for-prime l r)
	(cond ((> l r) 0)
		  ((prime? l) l)
		  (else (search-for-prime (+ 1 l) r))))
(define (try)
	(display (search-for-prime 1000 1500))
	(display (search-for-prime 10000 11000))
	(display (search-for-prime 100000 100100)))
